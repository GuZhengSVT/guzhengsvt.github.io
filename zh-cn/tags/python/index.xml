<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Python on 孤筝の温暖小家</title><link>https://guzhengsvt.github.io/zh-cn/tags/python/</link><description>Recent content from 孤筝の温暖小家</description><generator>Hugo</generator><language>zh-cn</language><managingEditor>lvbowen040427@163.com (孤筝)</managingEditor><webMaster>lvbowen040427@163.com (孤筝)</webMaster><lastBuildDate>Thu, 15 Feb 2024 11:44:33 +0800</lastBuildDate><atom:link href="https://guzhengsvt.github.io/zh-cn/tags/python/index.xml" rel="self" type="application/rss+xml"/><item><title>MicroPython函数库</title><link>https://guzhengsvt.github.io/zh-cn/post/code/micropython%E5%87%BD%E6%95%B0%E5%BA%93/</link><pubDate>Thu, 15 Feb 2024 11:44:33 +0800</pubDate><author>lvbowen040427@163.com (孤筝)</author><guid>https://guzhengsvt.github.io/zh-cn/post/code/micropython%E5%87%BD%E6%95%B0%E5%BA%93/</guid><description><![CDATA[<h1>MicroPython函数库</h1><p>作者: 孤筝 (lvbowen040427@163.com)</p>
          <h1 id="machine-与硬件相关功能">
<a class="header-anchor" href="#machine-%e4%b8%8e%e7%a1%ac%e4%bb%b6%e7%9b%b8%e5%85%b3%e5%8a%9f%e8%83%bd"></a>
machine-与硬件相关功能
</h1><h2 id="pin类">
<a class="header-anchor" href="#pin%e7%b1%bb"></a>
Pin类
</h2><h3 id="machinepinidmodenonepullnonevalue">
<a class="header-anchor" href="#machinepinidmodenonepullnonevalue"></a>
<code>machine.Pin(id,mode=None,pull=None,value)</code>
</h3><p>Pin对象构造函数</p>
<ul>
<li>id：GPIO编号，对于Pico为0-29</li>
<li>mode：模式，可选<code>None，Pin.IN(0),Pin.OUT(1),Pin.OPEN_DRAIN(2)</code></li>
<li>pull：使用内部上下拉电阻，仅在输入模式下有效，可选<code>None,Pin.PULL_UP(1),Pin.DOWN(2)</code></li>
<li>value：输出或开漏模式下端口值，0为低电位，1为高电位</li>
</ul>
<h3 id="pininitmodenonepullnone">
<a class="header-anchor" href="#pininitmodenonepullnone"></a>
<code>Pin.init(mode=None,pull=None)</code>
</h3><p>重新初始化GPIO口</p>
        <hr><p>本文 2024-02-15 首发于 <a href='https://guzhengsvt.github.io/'>孤筝の温暖小家</a>，最后修改于 2024-02-15</p><p>%!s(<nil>)</p>]]></description><category>Code</category></item><item><title>Python基础数据结构</title><link>https://guzhengsvt.github.io/zh-cn/post/code/python%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/</link><pubDate>Sun, 27 Aug 2023 21:40:39 +0800</pubDate><author>lvbowen040427@163.com (孤筝)</author><guid>https://guzhengsvt.github.io/zh-cn/post/code/python%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/</guid><description><![CDATA[<h1>Python基础数据结构</h1><p>作者: 孤筝 (lvbowen040427@163.com)</p>
          <p><strong>elem是单词element（元素）的缩写</strong>，在程序定义中代表某一不确定的类型，也就是抽象的数据类型。</p>
<h1 id="list">
<a class="header-anchor" href="#list"></a>
list
</h1><h2 id="定义">
<a class="header-anchor" href="#%e5%ae%9a%e4%b9%89"></a>
定义
</h2><p>由一系列元素按顺序进行排列而成的容器</p>
        <hr><p>本文 2023-08-27 首发于 <a href='https://guzhengsvt.github.io/'>孤筝の温暖小家</a>，最后修改于 2023-08-27</p><p>%!s(<nil>)</p>]]></description><category>Code</category></item><item><title>Python其他笔记</title><link>https://guzhengsvt.github.io/zh-cn/post/code/python%E5%85%B6%E4%BB%96%E7%AC%94%E8%AE%B0/</link><pubDate>Tue, 27 Jun 2023 00:57:42 +0800</pubDate><author>lvbowen040427@163.com (孤筝)</author><guid>https://guzhengsvt.github.io/zh-cn/post/code/python%E5%85%B6%E4%BB%96%E7%AC%94%E8%AE%B0/</guid><description><![CDATA[<h1>Python其他笔记</h1><p>作者: 孤筝 (lvbowen040427@163.com)</p>
          <h1 id="注释">
<a class="header-anchor" href="#%e6%b3%a8%e9%87%8a"></a>
注释
</h1><ul>
<li>单行注释
$\#$内容</li>
<li>多行注释</li>
</ul>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="line"><span class="cl"><span class="s1">&#39;&#39;&#39;
</span></span></span><span class="line"><span class="cl"><span class="s1">你好这里绿色的部分是注释
</span></span></span><span class="line"><span class="cl"><span class="s1">这里也是
</span></span></span><span class="line"><span class="cl"><span class="s1">&#39;&#39;&#39;</span>
</span></span><span class="line"><span class="cl"><span class="n">这里就不算注释了</span>
</span></span><span class="line"><span class="cl"><span class="c1">#单行注释</span>
</span></span><span class="line"><span class="cl"><span class="nb">print</span><span class="p">(</span><span class="s2">&#34;&#39;&#39;&#39;这里不是注释&#39;&#39;&#39;你看会print出来吗？&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="n">a</span><span class="o">=</span><span class="s1">&#39;&#39;&#39;你好&#39;&#39;&#39;</span><span class="mi">1</span>
</span></span><span class="line"><span class="cl"><span class="n">终端</span><span class="err">：</span><span class="ne">SyntaxError</span><span class="p">:</span> <span class="n">invalid</span> <span class="n">syntax</span>
</span></span><span class="line"><span class="cl"><span class="s1">&#39;&#39;&#39;
</span></span></span><span class="line"><span class="cl"><span class="s1">这样写会报错，看来代码中间插入注释会影响运行
</span></span></span><span class="line"><span class="cl"><span class="s1">多行字符串可以用&#39;&#39;&#39;</span><span class="n">字符串</span><span class="s1">&#39;&#39;&#39;来定义，注释被解释为赋值操作，所以上面的报错指向末尾的1
</span></span></span><span class="line"><span class="cl"><span class="s1">&#39;&#39;&#39;</span>
</span></span></code></pre></div><h1 id="编码格式">
<a class="header-anchor" href="#%e7%bc%96%e7%a0%81%e6%a0%bc%e5%bc%8f"></a>
编码格式
</h1><ul>
<li>在Python 2.x中，源文件默认编码格式为ASCII。如果内容中含有汉字，不指定编码格式的话，便不能正确的读取和输出。可以将下面的代码放到源文件的开头，来指定编码格式为UTF-8。</li>
</ul>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="line"><span class="cl"><span class="c1"># -*- coding: UTF-8 -*-</span>
</span></span></code></pre></div><p>在Python 3.x中，源文件默认编码格式为UTF-8。故在使用Python 3.x时，通常不需要指定编码格式。</p>
        <hr><p>本文 2023-06-27 首发于 <a href='https://guzhengsvt.github.io/'>孤筝の温暖小家</a>，最后修改于 2023-06-27</p><p>%!s(<nil>)</p>]]></description><category>Code</category></item><item><title>Python基础函数</title><link>https://guzhengsvt.github.io/zh-cn/post/code/python%E5%9F%BA%E7%A1%80%E5%87%BD%E6%95%B0/</link><pubDate>Tue, 27 Jun 2023 00:55:01 +0800</pubDate><author>lvbowen040427@163.com (孤筝)</author><guid>https://guzhengsvt.github.io/zh-cn/post/code/python%E5%9F%BA%E7%A1%80%E5%87%BD%E6%95%B0/</guid><description><![CDATA[<h1>Python基础函数</h1><p>作者: 孤筝 (lvbowen040427@163.com)</p>
          <h2 id="函数传参">
<a class="header-anchor" href="#%e5%87%bd%e6%95%b0%e4%bc%a0%e5%8f%82"></a>
函数传参
</h2><p>python中，函数传递参数本质上是一种赋值操作</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="line"><span class="cl"><span class="k">def</span> <span class="nf">func</span><span class="p">(</span><span class="n">arr</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="n">arr</span> <span class="o">=</span> <span class="mi">1</span>
</span></span><span class="line"><span class="cl">    <span class="nb">print</span><span class="p">(</span><span class="n">arr</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="n">a</span><span class="o">=</span><span class="mi">2</span>
</span></span><span class="line"><span class="cl"><span class="n">func</span><span class="p">(</span><span class="n">a</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="nb">print</span><span class="p">(</span><span class="n">a</span><span class="p">)</span>
</span></span></code></pre></div><ol>
<li>首先有两个变量arr和a，有两个对象1和2</li>
<li>a绑定2，func(a)将a绑定的对象2贴上arr标签</li>
<li>这时，对象1尚未创建，2贴上a标签和arr标签</li>
<li>$arr=1$操作将2上arr标签撕下，创建对象1并贴上arr标签</li>
<li>输出结果</li>
</ol>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="line"><span class="cl"><span class="mi">1</span>
</span></span><span class="line"><span class="cl"><span class="mi">2</span>
</span></span></code></pre></div><h2 id="输入输出">
<a class="header-anchor" href="#%e8%be%93%e5%85%a5%e8%be%93%e5%87%ba"></a>
输入输出
</h2><h3 id="print函数">
<a class="header-anchor" href="#print%e5%87%bd%e6%95%b0"></a>
print()函数
</h3><div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="line"><span class="cl"><span class="o">&gt;&gt;&gt;</span><span class="nb">print</span><span class="p">(</span><span class="s2">&#34;字符串&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="n">字符串</span>
</span></span><span class="line"><span class="cl"><span class="o">&gt;&gt;&gt;</span><span class="nb">print</span><span class="p">(</span><span class="s2">&#34;str1&#34;</span><span class="p">,</span><span class="s2">&#34;str2&#34;</span><span class="p">,</span><span class="s2">&#34;str3&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="n">str1</span> <span class="n">str2</span> <span class="n">str3</span><span class="c1">#空格取代逗号</span>
</span></span><span class="line"><span class="cl"><span class="nb">print</span><span class="p">(</span><span class="n">a</span><span class="o">+</span><span class="n">b</span><span class="o">**</span><span class="n">c</span><span class="p">)</span><span class="c1">#会先计算数值再输出</span>
</span></span><span class="line"><span class="cl"><span class="nb">print</span><span class="p">(</span><span class="nb">sum</span><span class="p">(</span><span class="n">a</span><span class="p">,</span><span class="n">b</span><span class="o">/</span><span class="n">c</span><span class="p">))</span><span class="c1">#优先执行sum()函数</span>
</span></span></code></pre></div><p><strong>==原型==</strong>
</p>
        <hr><p>本文 2023-06-27 首发于 <a href='https://guzhengsvt.github.io/'>孤筝の温暖小家</a>，最后修改于 2023-06-27</p><p>%!s(<nil>)</p>]]></description><category>Code</category></item><item><title>Python数据类型及运算符</title><link>https://guzhengsvt.github.io/zh-cn/post/code/python%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B%E5%8F%8A%E8%BF%90%E7%AE%97%E7%AC%A6/</link><pubDate>Tue, 27 Jun 2023 00:49:20 +0800</pubDate><author>lvbowen040427@163.com (孤筝)</author><guid>https://guzhengsvt.github.io/zh-cn/post/code/python%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B%E5%8F%8A%E8%BF%90%E7%AE%97%E7%AC%A6/</guid><description><![CDATA[<h1>Python数据类型及运算符</h1><p>作者: 孤筝 (lvbowen040427@163.com)</p>
          <h2 id="常量与变量">
<a class="header-anchor" href="#%e5%b8%b8%e9%87%8f%e4%b8%8e%e5%8f%98%e9%87%8f"></a>
常量与变量
</h2><ul>
<li>变量不需要声明类型</li>
<li>python用$=$给变量赋值，用$==$比较两个值是否相等，相等返回True，不等返回False。</li>
<li>变量使用前必须赋值（不同于C），变量只有赋值后才会被创建。
<ul>
<li>变量未定义异常</li>
</ul>
</li>
</ul>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="line"><span class="cl"><span class="o">&gt;&gt;&gt;</span> <span class="n">age</span>
</span></span><span class="line"><span class="cl"><span class="n">Traceback</span> <span class="p">(</span><span class="n">most</span> <span class="n">recent</span> <span class="n">call</span> <span class="n">last</span><span class="p">):</span>
</span></span><span class="line"><span class="cl">    <span class="n">File</span> <span class="s2">&#34;&lt;stdin&gt;&#34;</span><span class="p">,</span> <span class="n">line</span> <span class="mi">1</span><span class="p">,</span> <span class="ow">in</span> <span class="o">&lt;</span><span class="n">module</span><span class="o">&gt;</span>
</span></span><span class="line"><span class="cl"><span class="ne">NameError</span><span class="p">:</span> <span class="n">name</span> <span class="s1">&#39;age&#39;</span> <span class="ow">is</span> <span class="ow">not</span> <span class="n">defined</span>
</span></span></code></pre></div><p>常量——不变的变量
<strong>python没有任何机制保证变量不会改变对象，被改变时没有报错，没有C的const，所以使用时需要万分小心</strong></p>
        <hr><p>本文 2023-06-27 首发于 <a href='https://guzhengsvt.github.io/'>孤筝の温暖小家</a>，最后修改于 2023-06-27</p><p>%!s(<nil>)</p>]]></description><category>Code</category></item></channel></rss>